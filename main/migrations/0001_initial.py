# Generated by Django 4.0.5 on 2022-07-01 08:22

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(max_length=20, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('password', models.CharField(max_length=20, verbose_name='Пароль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='cardRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=80, null=True, verbose_name='ФИО')),
                ('gender', models.CharField(choices=[('М', 'М'), ('Ж', 'Ж')], default='М', max_length=1, verbose_name='Пол')),
                ('date_of_appeal', models.DateField(null=True, verbose_name='Дата обращения')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Дата выселения')),
                ('residence', models.CharField(choices=[('Ж', 'Ж'), ('П', 'П')], default='Ж', max_length=1, verbose_name='Проживание')),
                ('fluorography', models.DateField(null=True, verbose_name='Дата последней флюорографии')),
                ('reason_end', models.CharField(choices=[('НЕТ', 'НЕТ'), ('Продлен договор', 'Продлен договор'), ('Смерть', 'Смерть'), ('Решение жилищного вопроса', 'Решение жилищного вопроса'), ('Нарушение режима', 'Нарушение режима'), ('Оформление в др. соц. учреждения', 'Оформление в др. соц. учреждения'), ('Прочее', 'Прочее')], default='НЕТ', max_length=33, verbose_name='Причина расторжения договора')),
                ('period_time_begin', models.DateField(null=True, verbose_name='Период временной регистрации с')),
                ('period_time_end', models.DateField(null=True, verbose_name='Период временной регистрации до')),
                ('social_status', models.CharField(choices=[('БОМЖ', 'БОМЖ'), ('Не бездомный', 'Не бездомный')], default='БОМЖ', max_length=14, verbose_name='Социальный статус')),
                ('mls', models.CharField(choices=[('НЕТ', 'НЕТ'), ('МЛС', 'МЛС')], default='НЕТ', max_length=3, verbose_name='МЛС')),
                ('mls_begin', models.DateField(blank=True, null=True, verbose_name='МЛС с')),
                ('mls_end', models.DateField(blank=True, null=True, verbose_name='МЛС до')),
                ('disabled', models.CharField(choices=[('НЕТ', 'НЕТ'), ('ИНВ 1гр', 'ИНВ 1гр'), ('ИНВ 2гр', 'ИНВ 2гр'), ('ИНВ 3гр', 'ИНВ 3гр')], default='НЕТ', max_length=7, verbose_name='Инвалидность')),
                ('age_disabled', models.CharField(choices=[('НЕТ', 'НЕТ'), ('18-35 лет', '18-35 лет'), ('35-60 лет', '35-60 лет'), ('старше 60 лет', 'старше 60 лет')], default='НЕТ', max_length=13, verbose_name='Возраст инвалида')),
                ('pensioner', models.CharField(choices=[('НЕТ', 'НЕТ'), ('Пенс', 'Пенс')], default='НЕТ', max_length=4, verbose_name='Пенсионер')),
                ('age_pensioner', models.CharField(choices=[('НЕТ', 'НЕТ'), ('до 54 лет', 'до 54 лет'), ('55-74 лет', '55-74 лет'), ('старше 75 лет', 'старше 75 лет')], default='НЕТ', max_length=13, verbose_name='Возраст пенсионера')),
                ('narkology', models.CharField(choices=[('НЕТ', 'НЕТ'), ('На учете', 'На учете'), ('В диспансере', 'В диспансере')], default='НЕТ', max_length=12, verbose_name='Наркология')),
                ('pnd', models.CharField(choices=[('НЕТ', 'НЕТ'), ('На учете', 'На учете'), ('В диспансере', 'В диспансере')], default='НЕТ', max_length=12, verbose_name='ПНД')),
                ('employment', models.CharField(choices=[('Работает', 'Работает'), ('Не работает', 'Не работает')], default='Работает', max_length=11, verbose_name='Занятость')),
                ('number_room', models.CharField(max_length=3, null=True, verbose_name='Номер комнаты')),
                ('photo', models.ImageField(upload_to='', verbose_name='Фото')),
                ('comment', models.TextField(blank=True, null='', verbose_name='Примечание')),
                ('specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Специалист, закрепленный за клиентом')),
            ],
        ),
    ]
